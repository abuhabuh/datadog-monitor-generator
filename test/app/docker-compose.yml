# Dependencies:
#
# - Local env vars
#   - DATADOG_API_KEY: datadog API key of account to sync monitors to
#   - DD_MONITOR_GEN_SERVICE_ENV: environment for monitors (e.g., 'prod')
#   - DD_MONITOR_GEN_SERVICE: service name (e.g., 'test-app-service')
#   - DD_MONITOR_GEN_SERVICE_VERSION: service name (e.g., 'test-app-service')

version: "3.8"
services:
  dd-agent:
    image: gcr.io/datadoghq/agent:7
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/proc/:/host/proc/:ro"
      - "/sys/fs/cgroup/:/host/sys/fs/cgroup:ro"
    environment:
      # Localhost env var dependency
      DD_API_KEY: "${DATADOG_API_KEY}"
      DD_SITE: "datadoghq.com"
      DD_APM_ENABLED: "true"
      DD_APM_NON_LOCAL_TRAFFIC: "true"
    ports:
      - "8126:8126/tcp"
      - "8125:8125/udp"
    networks:
      - primary

  test-app:
    image: test-app
    build:
      # context is the root of flask-datadog project
      context: ../..
      dockerfile: test/app/Dockerfile
    environment:
      # DD service, env, and version are for tagging events in ddog
      DD_SERVICE: "${DD_MONITOR_GEN_SERVICE}"
      DD_ENV: "${DD_MONITOR_GEN_SERVICE_ENV}"
      DD_VERSION: "${DD_MONITOR_GEN_SERVICE_VERSION}"
      # agent host is the name of the dd-sgent docker service above
      DD_AGENT_HOST: dd-agent
      DD_TRACE_AGENT_PORT: "8126"
      DD_PROFILING_ENABLED: "true"
      DD_LOGS_INJECTION: "true"
    labels:
      com.datadoghq.tags.env: "prod"
      com.datadoghq.tags.service: "test-app"
      com.datadoghq.tags.version: "0.0.1"
    volumes:
      - "../..:/var/www/src/"
    ports:
      - "5000:5000"
    networks:
      - primary

networks:
  primary:
